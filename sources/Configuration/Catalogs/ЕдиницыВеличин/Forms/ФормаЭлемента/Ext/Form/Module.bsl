
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Объект.МинимальныйПоказательСтепениПриставки > -99 Тогда 
		МинимальныйПоказательСтепениПриставки = 
			Справочники.ПриставкиЕдиницВеличин.НайтиПоПоказателю(
				Объект.МинимальныйПоказательСтепениПриставки, 
				Объект.ОснованиеСтепениПриставки);
	КонецЕсли;
	
	Если Объект.МаксимальныйПоказательСтепениПриставки < 99 Тогда 
		МаксимальныйПоказательСтепениПриставки = 
			Справочники.ПриставкиЕдиницВеличин.НайтиПоПоказателю(
				Объект.МаксимальныйПоказательСтепениПриставки, 
				Объект.ОснованиеСтепениПриставки);
	КонецЕсли;
	
	// СтандартныеПодсистемы.ЦентрМониторинга
	
	// Подсчитываем количество созданий формы, стандартный разделитель ".".
	Комментарий = Строка(ПолучитьСкоростьКлиентскогоСоединения());
	ЦентрМониторинга.ЗаписатьОперациюБизнесСтатистики(Метаданные.Справочники.ЕдиницыВеличин.ПолноеИмя() + ".ПриСозданииНаСервере", 1, Комментарий);
	
	// Конец СтандартныеПодсистемы.ЦентрМониторинга
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриСозданииНаСервере(ЭтотОбъект,
		Объект[ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитНаименования()]);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
	// ОтложенноеОбновлениеПредставления
	МассивРеквизитов = Новый Массив;
	РеквизитНеобходимоВычислитьРеквизиты = Новый РеквизитФормы("НеобходимоВычислитьРеквизиты", Новый ОписаниеТипов("Булево"), , "Необходимо изменение представления");	
	МассивРеквизитов.Добавить(РеквизитНеобходимоВычислитьРеквизиты);
	ИзменитьРеквизиты(МассивРеквизитов);
	// Конец ОтложенноеОбновлениеПредставления
	
	Если Параметры.Ключ.Пустая() И Параметры.ЗначениеКопирования.Пустая() Тогда
		Объект.Выражение.Добавить().ПоказательСтепени = 1;
	КонецЕсли;
	
	УстановитьДоступность();

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектов.ПриЗаписиНаСервере(ЭтотОбъект,
		Объект[ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитНаименования()],
		ТекущийОбъект.Ссылка);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте
Процедура Склонения(Команда)
	
	СклонениеПредставленийОбъектовКлиент.ОбработатьКомандуСклонения(ЭтотОбъект,
		Объект["Наименование" + Прав(Команда.Имя, СтрДлина(Команда.Имя)-СтрДлина("Склонения"))]);
			
КонецПроцедуры

// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
		
	// СтандартныеПодсистемы.СклонениеПредставленийОбъектов
	СклонениеПредставленийОбъектовКлиент.ПриИзмененииПредставления(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

КонецПроцедуры

&НаКлиенте
Процедура ПредикатыПриИзменении(Элемент)
	
	ЕдиницыВеличинКлиентСервер.ОбновитьВычисляемыеРеквизиты(Объект, Ложь);
	
	// ОтложенноеОбновлениеПредставления
	Если Не Объект.ИмеетСпециальныеНаименованиеИОбозначение Тогда

		НеобходимоВычислитьРеквизиты = Истина;
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьВычисляемыеРеквизиты", 0.5, Истина);

	КонецЕсли;	
	// Конец ОтложенноеОбновлениеПредставления

	Подключаемый_ПриИзмененииРеквизита(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ДопустимоПрименениеПриставокПриИзменении(Элемент)
	
	Подключаемый_ПриИзмененииРеквизита(Элемент);

КонецПроцедуры

&НаСервере
Процедура МаксимальныйПоказательСтепениПриставкиПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(МаксимальныйПоказательСтепениПриставки) Тогда
		Объект.МаксимальныйПоказательСтепениПриставки = МаксимальныйПоказательСтепениПриставки.Порядок;
	Иначе
		Объект.МаксимальныйПоказательСтепениПриставки = 99;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйПоказательСтепениПриставкиПриИзменении(Элемент)
	МаксимальныйПоказательСтепениПриставкиПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура МинимальныйПоказательСтепениПриставкиПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(МинимальныйПоказательСтепениПриставки) Тогда
		Объект.МинимальныйПоказательСтепениПриставки = МинимальныйПоказательСтепениПриставки.Порядок;
	Иначе
		Объект.МинимальныйПоказательСтепениПриставки = -99;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МинимальныйПоказательСтепениПриставкиПриИзменении(Элемент)
	МинимальныйПоказательСтепениПриставкиПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура МинимальныйПоказательСтепениПриставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Перем ПараметрыПолученияДанных;
	
	ПараметрыПолученияДанных = СтандартныеПодсистемыКлиентИТГ.ПолучитьПараметрыПолученияДанныхВыбора(ЭтаФорма, Элемент);
	
    ПараметрыПолученияДанных.Вставить("ДополнительныеПараметры", Новый Структура);
	ПараметрыПолученияДанных.ДополнительныеПараметры.Вставить("МаксимальныйПоказательСтепениПриставки", Объект.МаксимальныйПоказательСтепениПриставки);

	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ПриставкиЕдиницВеличин"), ПараметрыПолученияДанных);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МинимальныйПоказательСтепениПриставкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
    ПараметрыПолученияДанных.Вставить("ДополнительныеПараметры", Новый Структура);
	ПараметрыПолученияДанных.ДополнительныеПараметры.Вставить("МаксимальныйПоказательСтепениПриставки",
		Объект.МаксимальныйПоказательСтепениПриставки);

	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ПриставкиЕдиницВеличин"), ПараметрыПолученияДанных);
	
	СтандартнаяОбработка = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйПоказательСтепениПриставкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Перем ПараметрыПолученияДанных;
	
	ПараметрыПолученияДанных = СтандартныеПодсистемыКлиентИТГ.ПолучитьПараметрыПолученияДанныхВыбора(ЭтаФорма, Элемент);
	
    ПараметрыПолученияДанных.Вставить("ДополнительныеПараметры", Новый Структура);
	ПараметрыПолученияДанных.ДополнительныеПараметры.Вставить("МинимальныйПоказательСтепениПриставки", Объект.МинимальныйПоказательСтепениПриставки);

	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ПриставкиЕдиницВеличин"), ПараметрыПолученияДанных);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимальныйПоказательСтепениПриставкиАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрыПолученияДанных.Вставить("ДополнительныеПараметры", Новый Структура);
	ПараметрыПолученияДанных.ДополнительныеПараметры.Вставить("МинимальныйПоказательСтепениПриставки", Объект.МинимальныйПоказательСтепениПриставки);

	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ПриставкиЕдиницВеличин"), ПараметрыПолученияДанных);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыражение

&НаКлиенте
Процедура ВыражениеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.ПоказательСтепени=1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеПриИзменении(Элемент)
	
	ЕдиницыВеличинКлиентСервер.ОбновитьВычисляемыеРеквизиты(Объект, Ложь);
	
	// ОтложенноеОбновлениеПредставления
	Если Не Объект.ИмеетСпециальныеНаименованиеИОбозначение Тогда

		НеобходимоВычислитьРеквизиты = Истина;
		ПодключитьОбработчикОжидания("Подключаемый_ОбновитьВычисляемыеРеквизиты", 0.5, Истина);

	КонецЕсли;	
	// Конец ОтложенноеОбновлениеПредставления
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеПриставкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Перем ПараметрыПолученияДанных;
	
	ПараметрыПолученияДанных = СтандартныеПодсистемыКлиентИТГ.ПолучитьПараметрыПолученияДанныхВыбора(ЭтаФорма, Элемент);
	
    ПараметрыПолученияДанных.Вставить("ДополнительныеПараметры", Новый Структура);
	ПараметрыПолученияДанных.ДополнительныеПараметры.Вставить("ЕдиницаВеличины",
		Объект.Выражение[Элементы.Выражение.ТекущаяСтрока].БазоваяЕдиница);

	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ПриставкиЕдиницВеличин"), ПараметрыПолученияДанных);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеПриставкаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
    ПараметрыПолученияДанных.Вставить("ДополнительныеПараметры", Новый Структура);
	ПараметрыПолученияДанных.ДополнительныеПараметры.Вставить("ЕдиницаВеличины",
		Объект.Выражение[Элементы.Выражение.ТекущаяСтрока].БазоваяЕдиница);

	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ПриставкиЕдиницВеличин"), ПараметрыПолученияДанных);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеБазоваяЕдиницаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Перем ПараметрыПолученияДанных;
	
	ПараметрыПолученияДанных = СтандартныеПодсистемыКлиентИТГ.ПолучитьПараметрыПолученияДанныхВыбора(ЭтаФорма, Элемент);
	
    ПараметрыПолученияДанных.Вставить("ДополнительныеПараметры", Новый Структура);
	ПараметрыПолученияДанных.ДополнительныеПараметры.Вставить("ДляПроизводнойЕдиницыВеличины", Объект.Ссылка);

	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ЕдиницыВеличин"), ПараметрыПолученияДанных);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыражениеБазоваяЕдиницаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрыПолученияДанных.Вставить("ДополнительныеПараметры", Новый Структура);
	ПараметрыПолученияДанных.ДополнительныеПараметры.Вставить("ДляПроизводнойЕдиницыВеличины", Объект.Ссылка);

	ДанныеВыбора = ПолучитьДанныеВыбора(Тип("СправочникСсылка.ЕдиницыВеличин"), ПараметрыПолученияДанных);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// ОтложенноеОбновлениеПредставления

&НаКлиенте
Процедура Подключаемый_ОбновитьВычисляемыеРеквизиты() 

	Подключаемый_ОбновитьВычисляемыеРеквизитыНаСервере();
	НеобходимоВычислитьРеквизиты = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьВычисляемыеРеквизитыНаСервере()

	ЕдиницыВеличинКлиентСервер.ОбновитьВычисляемыеРеквизиты(Объект, Истина);
	
КонецПроцедуры

// Конец ОтложенноеОбновлениеПредставления
	
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
    ЗапретРедактированияРеквизитовОбъектовКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект);
КонецПроцедуры

// СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте 
Процедура Подключаемый_ПросклонятьПредставлениеПоВсемПадежам() 
	
	СклонениеПредставленийОбъектовКлиент.ПросклонятьПредставлениеПоВсемПадежам(ЭтотОбъект,
		Объект[ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитНаименования()]);

КонецПроцедуры

// Конец СтандартныеПодсистемы.СклонениеПредставленийОбъектов

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаНаименованияИОбозначения", "ТолькоПросмотр",
		НЕ Объект.ИмеетСпециальныеНаименованиеИОбозначение);
		
	Для Каждого ВариантОбозначения Из ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьВариантыОбозначенийЕдиницВеличин() Цикл
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитПредлогаДляЗнаменателя(ВариантОбозначения), "Видимость",
			Объект.ИмеетСпециальныеНаименованиеИОбозначение);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы, ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитПробелПередОбозначением(ВариантОбозначения), "Видимость",
			Объект.ИмеетСпециальныеНаименованиеИОбозначение);
			
	КонецЦикла;
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ИспользоватьНаименованиеСтепениКакПрилагательное", "Видимость",
		Объект.ИмеетСпециальныеНаименованиеИОбозначение);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаПриставки", "Видимость",
		Объект.ИмеетСпециальныеНаименованиеИОбозначение);
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаКоэффициент", "Видимость",
		(Объект.ЭтоКогерентнаяЕдиница <> Истина)
		И (Объект.ИмеетСпециальныеНаименованиеИОбозначение = Истина)
	);
			
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы, "ГруппаПриставкиПриИспользовании", "Видимость",
		Объект.ДопустимоПрименениеПриставок);
			
КонецПроцедуры

#КонецОбласти