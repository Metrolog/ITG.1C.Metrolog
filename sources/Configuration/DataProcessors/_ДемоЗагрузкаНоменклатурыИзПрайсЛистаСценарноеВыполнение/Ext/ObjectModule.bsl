#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает сведения о внешней обработке.
Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.1.3.27");
	ПараметрыРегистрации.Информация = НСтр("ru = 'Обработка для загрузки номенклатуры из прайс-листа фирмы ""1C"" с использованием сценарного выполнения. На сервере должен быть установлен Microsoft Office или Data Connectivity Components.'");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = "2.3.3.42";
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'Загрузить номенклатуру из прайс-листа фирмы ""1C"" (сценарий)'");
	Команда.Идентификатор = "ЗагрузитьНоменклатуруИзПрайсЛиста";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыСценарийВБезопасномРежиме();
	Команда.ПоказыватьОповещение = Ложь;
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'Параметры загрузки номенклатуры из прайс-листа (сценарий)'");
	Команда.Идентификатор = "Форма";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	Команда.ПоказыватьОповещение = Истина;
	
	МодульРазрешений = ДополнительныеОтчетыИОбработкиВБезопасномРежимеИнтерфейс;
	
	Разрешение = МодульРазрешений.РазрешениеПолучениеДанныхИзИнтернет("HTTP", "www.1c.ru", 80);
	ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
	
	Разрешение = МодульРазрешений.РазрешениеСозданиеCOMОбъекта("Excel.Application");
	ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
	
	Разрешение = МодульРазрешений.РазрешениеПередачаФайлаВоВнешнийОбъект();
	ПараметрыРегистрации.Разрешения.Добавить(Разрешение);
	
	Возврат ПараметрыРегистрации;
КонецФункции

// Интерфейс для запуска логики обработки (для команд с видом СценарийВБезопасномРежиме - формирование сценария).
Функция СформироватьСценарий(ИдентификаторКоманды, ПараметрыВыполнения) Экспорт
	АдресФайла = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыВыполнения, "АдресФайла");
	Если Не ЗначениеЗаполнено(АдресФайла) Тогда
		Ссылка = ПараметрыВыполнения.ДополнительнаяОбработкаСсылка;
		ХранилищеНастроек = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ХранилищеНастроек");
		Настройки = ХранилищеНастроек.Получить();
		Если ТипЗнч(Настройки) = Тип("Структура") Тогда
			АдресФайла = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Настройки, "АдресФайла");
		Иначе
			АдресФайла = "http://www.1c.ru/ftp/pub/pricelst/price_1c.zip";
		КонецЕсли;
	КонецЕсли;
	ВключатьЗагрузку = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыВыполнения, "ВключатьЗагрузку", Истина);
	
	Конструктор = ДополнительныеОтчетыИОбработкиВБезопасномРежимеИнтерфейс;
	Сценарий = Конструктор.НовыйСценарий();
	
	Если ВключатьЗагрузку Тогда
		// Выполнить метод конфигурации "ПолучитьФайлИзИнтернета" с параметрами (<Ключ сессии>, АдресФайла)
		// и сохранить результат в переменную "АдресАрхива".
		Этап = Конструктор.ДобавитьМетодКонфигурации(Сценарий,
			"ДополнительныеОтчетыИОбработкиВБезопасномРежиме.ПолучитьФайлИзИнтернета",
			"АдресАрхива");
		Конструктор.ДобавитьКлючСессии(Этап);
		Конструктор.ДобавитьЗначение(Этап, АдресФайла);
	КонецЕсли;
	
	// Выполнить метод конфигурации "РаспаковатьАрхив" с параметром (АдресАрхива)
	// и сохранить результат в переменную "ОписаниеАрхива".
	Этап = Конструктор.ДобавитьМетодКонфигурации(Сценарий,
		"ДополнительныеОтчетыИОбработкиВБезопасномРежимеВызовСервера.РаспаковатьАрхив",
		"ОписаниеАрхива");
	Конструктор.ДобавитьСохраняемоеЗначение(Этап, "АдресАрхива");
	
	// Выполнить метод обработки "НайтиXLSВАрхиве" с параметром (ОписаниеАрхива)
	// и сохранить результат в переменную "АдресФайла".
	Этап = Конструктор.ДобавитьМетодОбработки(Сценарий, "НайтиXLSВАрхиве", "АдресФайла");
	Конструктор.ДобавитьСохраняемоеЗначение(Этап, "ОписаниеАрхива");
	
	// Выполнить метод конфигурации "СоздатьComОбъект" с параметром ("Excel.Application")
	// и сохранить результат в переменную "objExcel".
	Этап = Конструктор.ДобавитьМетодКонфигурации(Сценарий,
		"ДополнительныеОтчетыИОбработкиВБезопасномРежиме.СоздатьComОбъект",
		"objExcel");
	Конструктор.ДобавитьКлючСессии(Этап);
	Конструктор.ДобавитьЗначение(Этап, "Excel.Application");
	
	// Выполнить метод конфигурации "ПередатьФайлВоВнешнийОбъект" с параметрами
	// (<Ключ сессии>, objExcel, АдресФайла, "Application.Workbooks.Open", <Массив передаваемых файлов>).
	Этап = Конструктор.ДобавитьМетодКонфигурации(Сценарий,
		"ДополнительныеОтчетыИОбработкиВБезопасномРежиме.ПередатьФайлВоВнешнийОбъект");
	Конструктор.ДобавитьКлючСессии(Этап);
	Конструктор.ДобавитьСохраняемоеЗначение(Этап, "objExcel");
	Конструктор.ДобавитьСохраняемоеЗначение(Этап, "АдресФайла");
	Конструктор.ДобавитьЗначение(Этап, "Application.Workbooks.Open");
	Параметры = Новый Массив();
	Параметры.Добавить(Конструктор.ПараметрПередаваемыйФайл());
	Конструктор.ДобавитьЗначение(Этап, Параметры);
	
	// Выполнить метод обработки "ЗагрузитьПрайс" с параметром (objExcel).
	Этап = Конструктор.ДобавитьМетодОбработки(Сценарий, "ЗагрузитьПрайс");
	Конструктор.ДобавитьСохраняемоеЗначение(Этап, "objExcel");
	
	Возврат Сценарий;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиXLSВАрхиве(Знач ОписаниеАрхива) Экспорт
	
	АдресФайла = ОписаниеАрхива.Получить("PRICE_1C.XLS");
	Если АдресФайла <> Неопределено Тогда
		Возврат АдресФайла;
	Иначе
		ВызватьИсключение НСтр("ru = 'Файл PRICE_1C.XLS не обнаружен в загруженном архиве!'");
	КонецЕсли;
	
КонецФункции

Функция ЗагрузитьПрайс(Excel) Экспорт
	
	Excel.DisplayAlerts = 0;
	
	ExcelSheet = Excel.Sheets(1);
	
	ВсегоСтрок = ExcelSheet.Cells.SpecialCells(11).Row;
	
	ExcelSheetRange = ExcelSheet.Range(ExcelSheet.Cells(1,2), ExcelSheet.Cells(ВсегоСтрок,4));
	Данные = ExcelSheetRange.Value.Выгрузить();
	
	ЗагружаемаяНоменклатура = Новый ТаблицаЗначений;
	ЗагружаемаяНоменклатура.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
	ЗагружаемаяНоменклатура.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	
	ЗначенияКолонкиНаименование = Данные[0];
	ЗначенияКолонкиЦена = Данные[2];
	
	Для Индекс = 0 По ВсегоСтрок - 1 Цикл
		Наименование = ЗначенияКолонкиНаименование[Индекс];
		Цена         = ЗначенияКолонкиЦена[Индекс];
		Если НЕ ЗначениеЗаполнено(Цена) ИЛИ НЕ ЗначениеЗаполнено(Наименование) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ЗагружаемаяНоменклатура.Добавить();
		НоваяСтрока.Наименование = Наименование;
		НоваяСтрока.Цена         = Цена;
	КонецЦикла;
	
	Данные = Неопределено;
	ExcelSheetRange = Неопределено;
	ВсегоСтрок = Неопределено;
	ExcelSheet = Неопределено;
	
	Excel.Application.Workbooks(1).Close();
	ЗагружаемаяНоменклатураВГраница = ЗагружаемаяНоменклатура.Количество() - 1;
	Excel.Quit();
	
	Excel = Неопределено;
	
	// Чтение существующей номенклатуры.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.Наименование
	|ИЗ
	|	Справочник._ДемоНоменклатура КАК Таблица";
	
	СуществующаяНоменклатура = Запрос.Выполнить().Выгрузить();
	СуществующаяНоменклатура.Индексы.Добавить("Наименование");
	
	// Загрузка.
	ГенераторСлучайныхЧисел = Новый ГенераторСлучайныхЧисел;
	СозданоЭлементов = 0;
	ОбновленоЭлементов = 0;
	Для Номер = 1 По ДеньНедели(ТекущаяДатаСеанса()) Цикл
		СлучайныйИндекс = ГенераторСлучайныхЧисел.СлучайноеЧисло(0, ЗагружаемаяНоменклатураВГраница);
		ЗагружаемаяСтрока = ЗагружаемаяНоменклатура[СлучайныйИндекс];
		СуществующаяСтрока = СуществующаяНоменклатура.Найти(ЗагружаемаяСтрока.Наименование, "Наименование");
		Если СуществующаяСтрока = Неопределено Тогда
			СправочникОбъект = Справочники._ДемоНоменклатура.СоздатьЭлемент();
			СправочникОбъект.УстановитьНовыйКод();
			СправочникОбъект.Наименование = ЗагружаемаяСтрока.Наименование;
			СозданоЭлементов = СозданоЭлементов + 1;
		Иначе
			СправочникОбъект = СуществующаяСтрока.Ссылка.ПолучитьОбъект();
			ОбновленоЭлементов = ОбновленоЭлементов + 1;
		КонецЕсли;
		СправочникОбъект.Цена = ЗагружаемаяСтрока.Цена;
		СправочникОбъект.Записать();
	КонецЦикла;
	
	Загружено = СозданоЭлементов + ОбновленоЭлементов;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = СтрЗаменить(НСтр("ru = 'Из прайс-листа загружено %1 новых позиций'"), "%1", Загружено);
	Сообщение.Сообщить();
	
КонецФункции

#КонецОбласти

#КонецЕсли