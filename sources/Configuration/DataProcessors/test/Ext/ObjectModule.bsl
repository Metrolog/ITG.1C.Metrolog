
перем СписокСобытий; 
#region tests

Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем Генератор;

Перем ТестируемаяФорма;
Перем НужноИсключениеЕслиНеНайденоДокументов;

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Ожидаем = КонтекстЯдра.Плагин("УтвержденияBDD");
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	Генератор = КонтекстЯдра.Плагин("СериализаторMXL");  
КонецПроцедуры


Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.Добавить("тест_ЗагрузкаГрамматики",,"Грузим грамматику номеров");    
	НаборТестов.Добавить("тест_ПарсерПростой",,"Парсим номер (123) 321-1234");    
	
КонецПроцедуры


Процедура ПередЗапускомТеста() Экспорт
	НачатьТранзакцию();
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры



Процедура тест_ЗагрузкаГрамматики() экспорт
	Файл = новый Файл(ЭтотОбъект.ИспользуемоеИмяФайла);
	Загрузка = ВнешниеОбработки.Создать(Файл.Путь+"lib\loadGrammar.epf");
	
	Результат = Загрузка.ПрочитатьГрамматику(Файл.Путь+"tst\grammar-phone-number.xml");
	
	Поля = новый Массив;
	Поля.Добавить(Новый Структура("ИмяПоля,Тип,КоличествоЗаписей","ОписаниеДействий","Соответствие",4));
	Поля.Добавить(Новый Структура("ИмяПоля,Тип,КоличествоЗаписей","Параметры","Соответствие",8));
	Поля.Добавить(Новый Структура("ИмяПоля,Тип,КоличествоЗаписей","Переходы","Структура",2));
	Поля.Добавить(Новый Структура("ИмяПоля,Тип,КоличествоЗаписей","Правила","Соответствие",5));
	Поля.Добавить(Новый Структура("ИмяПоля,Тип,КоличествоЗаписей","Символы","Соответствие",11));
	Поля.Добавить(Новый Структура("ИмяПоля,Тип,КоличествоЗаписей","Сканер","Структура",2));
	Поля.Добавить(Новый Структура("ИмяПоля,Тип,КоличествоЗаписей","ТаблицаСимволов","Соответствие",6));
	Поля.Добавить(Новый Структура("ИмяПоля,Тип,КоличествоЗаписей","ТипыСимволов","Соответствие",8));
	
	Ожидаем.Что(ТипЗнч(Результат)).Равно(Тип("Структура"));
	для каждого х из Поля цикл
		поле = Неопределено;
		Ожидаем.Что(Результат.Свойство(х.ИмяПоля,поле)).ЭтоИстина();
		Ожидаем.Что(ТипЗнч(поле)).Равно(Тип(х.Тип));
		Ожидаем.Что(поле.Количество()).Равно(х.КоличествоЗаписей);
	КонецЦикла;
	
КонецПроцедуры



Процедура тест_ПарсерПростой() экспорт
	Файл = новый Файл(ЭтотОбъект.ИспользуемоеИмяФайла);
	Загрузка = ВнешниеОбработки.Создать(Файл.Путь+"lib\loadGrammar.epf");
	Парсер = ВнешниеОбработки.Создать(Файл.Путь+"lib\parser.epf");
	Грамматика = Загрузка.ПрочитатьГрамматику(Файл.Путь+"tst\grammar-phone-number.xml");

	
	Данные = новый Структура;
	Данные.Вставить("Текст","(123) 321-1234");
	Данные.Вставить("Автомат",Грамматика);
	
	Результат = Парсер.РазобратьТекст(Данные);
	
	Ожидаем.Что(ТипЗнч(Результат)).Равно(Тип("Структура"));
	Ожидаем.Что(Результат.lxmNum3.Data).Равно("321");
	Ожидаем.Что(Результат.lxmNum4.Data).Равно("1234");
	Ожидаем.Что(ТипЗнч(Результат.AreaCode)).Равно(Тип("Структура"));
	Ожидаем.Что(Результат.AreaCode.lxmNum3.Data).Равно("123");
КонецПроцедуры





#endregion
