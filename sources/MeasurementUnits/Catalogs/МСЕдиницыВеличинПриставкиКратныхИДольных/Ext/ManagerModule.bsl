#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает элемент справочника по основанию степени и показателю.
//
// Параметры:
//  ПоказательСтепени	- Строка, Число		- Показатель степени
//  ОснованиеСтепени    - Строка, Число		- Основание степени
// 
// Возвращаемое значение:
//   Ссылка             - элемент справочника
//   Неопределено       - в случае, искомый элемент не найден.
//
Функция НайтиПоПоказателю(Знач ПоказательСтепени, Знач ОснованиеСтепени = 10) Экспорт
	Возврат НайтиПоКоду(ПолучитьКод(ПоказательСтепени, ОснованиеСтепени));
КонецФункции

// Создаёт либо обновляет поставляемый элемент справочника при обновлении ИБ.
//
// Параметры:
//  Основание           - Число		- Основание степени
//  Показатель			- Число		- Показатель степени
//  Наименование 		- Строка    - Наименование приставки
//  Обозначение 		- Строка    - Обозначение приставки
// 
Процедура ЗаполнитьПредопределённый(Основание, Порядок, Наименование, Обозначение) Экспорт
	
	Приставка = НайтиПоПоказателю(Порядок, Основание);
	
	Если Приставка <> ПустаяСсылка() Тогда
		Если 
			(Приставка.Основание = Основание)
			И (Приставка.Порядок = Порядок)
			И (Приставка.Обозначение = Обозначение)
			И (Приставка.Наименование = Наименование)
		Тогда
			Возврат;
		Иначе
			ПриставкаОбъект = Приставка.ПолучитьОбъект();
		КонецЕсли;
	Иначе
		ПриставкаОбъект = СоздатьЭлемент();
	КонецЕсли;
	
	ПриставкаОбъект.Основание = Основание;
	ПриставкаОбъект.Порядок = Порядок;
	ПриставкаОбъект.Наименование = Наименование;
	ПриставкаОбъект.Обозначение = Обозначение;

	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ПриставкаОбъект, , Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Представление

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка) 
	СтандартнаяОбработка = Ложь; 
    Поля.Добавить("Наименование");
    Поля.Добавить("Основание");
    Поля.Добавить("Порядок");
КонецПроцедуры 

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка) 
    СтандартнаяОбработка = Ложь;
    Представление = Данные.Наименование + " (" + Данные.Основание + РаботаСоСтрокамиЮникодКлиентСервер.ПолучитьСтрокуИзПоказателяСтепени(Данные.Порядок) + ")";
КонецПроцедуры

#КонецОбласти

#Область КодСправочника

// Преобразует переданные основание и показатель степени (число) в значение кода для справочника.
//
// Параметры:
//  ПоказательСтепени	 - Строка, Число	 - Показатель степени
//  ОснованиеСтепени     - Строка, Число     - Основание степени
// 
// Возвращаемое значение:
//   Число - значение кода для справочника
//
Функция ПолучитьКод(Знач ПоказательСтепени, Знач ОснованиеСтепени = 10) Экспорт
	ПоказательСтепениЧисло = Число(ПоказательСтепени);
	ОснованиеСтепениЧисло = Число(ОснованиеСтепени);
	Результат = (ПоказательСтепениЧисло + 100)*100 + ОснованиеСтепениЧисло;
	Возврат Результат;
КонецФункции

#КонецОбласти

#КонецЕсли