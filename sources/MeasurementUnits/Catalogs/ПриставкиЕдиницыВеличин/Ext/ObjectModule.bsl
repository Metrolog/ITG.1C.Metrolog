#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает приставку в зависимости от функциональных опций.
//
// Возвращаемое значение:
//   Строка - приставка
//
Функция ПолучитьНаименование() Экспорт
	Возврат ЭтотОбъект[ПолучитьРеквизитНаименования()];
КонецФункции

// Возвращает обозначение приставки в зависимости от функциональных опций.
//
// Возвращаемое значение:
//   Строка - обозначение приставки
//
Функция ПолучитьОбозначение() Экспорт
	Возврат ЭтотОбъект[ПолучитьРеквизитОбозначения()];
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Основание = 0 Тогда
		Основание = 10;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(Знач ДанныеЗаполнения, Знач ТекстЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Ссылка", Ссылка);
	
	Дубли = ПоискИУдалениеДублей.НайтиДублиЭлемента(Метаданные.Справочники.ПриставкиЕдиницыВеличин.ПолноеИмя(), ЭтотОбъект, ДополнительныеПараметры);
	Если Дубли.Количество() > 0 Тогда
		Ошибка = НСтр("ru = 'Приставка единицы величины с такими основанием и показателем степени уже существует.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Ошибка, , "Объект.Порядок", , Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьРеквизитНаименования()
	Возврат ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитНаименования();
КонецФункции

Функция ПолучитьРеквизитОбозначения()
	Возврат ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитОбозначения();
КонецФункции

#КонецОбласти

#КонецЕсли