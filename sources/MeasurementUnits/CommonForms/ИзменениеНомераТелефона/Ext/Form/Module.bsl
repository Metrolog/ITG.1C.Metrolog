#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	НовыйТелефон = Параметры.НовыйТелефон;
	Сертификат = Параметры.Сертификат;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КодПодтвержденияПриИзменении(Элемент)
	
	Если СтрДлина(СокрЛП(КодПодтверждения)) = 6 Тогда
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьКодПодтверждения", 0.5, Истина); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодПодтвержденияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	Если СтрДлина(СокрЛП(Текст)) = 6 Тогда
		КодПодтверждения = СокрЛП(Текст);
		ПодключитьОбработчикОжидания("Подключаемый_ПроверитьКодПодтверждения", 0.5, Истина); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьНомер(Команда)
	
	КодОтправлен = ПолучитьКодПодтверждения();
	Если КодОтправлен Тогда
		ЗапуститьОбратныйОтсчет();
		ВыполняетсяПроверкаТелефона = Истина;
		
		УправлениеФормой(ЭтаФорма);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьКодПовторно(Команда)
	
	КодПодтверждения = Неопределено;
	КодОтправлен = ПолучитьКодПодтверждения(Истина);
	ЗапуститьОбратныйОтсчет();

	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьЗаявление(Команда)
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗапуститьОбратныйОтсчет()
	
	Таймер = 60;
	ПодключитьОбработчикОжидания("Подключаемый_ОбработчикОбратногоОтсчета", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработчикОбратногоОтсчета()
	
	Таймер = Таймер - 1;
	Если Таймер >= 0 Тогда
		НадписьОбратногоОтсчета = СтрШаблон(НСтр("ru = 'Запросить код повторно можно будет через %1 сек.'"), Таймер);
		ПодключитьОбработчикОжидания("Подключаемый_ОбработчикОбратногоОтсчета", 1, Истина);		
	Иначе
		НадписьОбратногоОтсчета = "";
		КодОтправлен = Ложь;
		УправлениеФормой(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьПодтвержденностьТелефона()
	
	Если Не ТелефонПодтвержден Тогда
		ТекстСообщения = НСтр("ru = 'Сначала необходимо подтвердить новый номер телефона'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "НовыйТелефон");		
	КонецЕсли;
	
	Возврат ТелефонПодтвержден;
	
КонецФункции

&НаСервере 
Функция ПолучитьКодПодтверждения(Повторно = Ложь)
	
	Результат = МенеджерСервисаКриптографии.ПолучитьПроверочныйКод(
		Сертификат.Идентификатор, 
		НовыйТелефон, 
		?(Повторно, ИдентификаторЗаявления, Неопределено));
		
	Если Результат.Выполнено Тогда
		ИдентификаторЗаявления = Результат.ИдентификаторЗаявления;
		НомерКода = Результат.НомерКода;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ОписаниеОшибки);
	КонецЕсли;

	Возврат Результат.Выполнено;
	
КонецФункции

&НаКлиенте
Процедура НадписьШаг1ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	Если НавигационнаяСсылка = "#НапечататьЗаявление" И ПроверитьПодтвержденностьТелефона() Тогда
		Результат = ПолучитьТабличныйДокументНаСервере(ИдентификаторЗаявления);
		Если Результат.Выполнено Тогда
			ИдентификаторПечатнойФормы = "ЗаявлениеНаИзменениеНомераТелефона";
			НазваниеПечатнойФормы = НСтр("ru = 'Заявление на смену абонентского номера подвижной (мобильной) связи'");
			
			Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.Печать") Тогда
				МодульУправлениеПечатьюКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеПечатьюКлиент");
				
				КоллекцияПечатныхФорм = МодульУправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
				ПечатнаяФорма = МодульУправлениеПечатьюКлиент.ОписаниеПечатнойФормы(КоллекцияПечатныхФорм, ИдентификаторПечатнойФормы);
				ПечатнаяФорма.СинонимМакета = НазваниеПечатнойФормы;
				ПечатнаяФорма.ТабличныйДокумент = Результат.Файл;
				ПечатнаяФорма.ИмяФайлаПечатнойФормы = НазваниеПечатнойФормы;
				
				ОбластиОбъектов = Новый СписокЗначений;
				МодульУправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм, ОбластиОбъектов);
			Иначе
				Результат.Файл.Показать(НазваниеПечатнойФормы);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗаявленияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ПроверитьПодтвержденностьТелефона() Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ФайлЗаявлениеНажатиеПослеПомещенияФайла", ЭтотОбъект);
	НачатьПомещениеФайла(Оповещение,,, Истина, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлЗаявлениеНажатиеПослеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, ВходящийКонтекст) Экспорт
	
	Если Результат Тогда
		Файл = Новый Файл(ВыбранноеИмяФайла);
		ФайлЗаявления = Файл.Имя;
		АдресФайлаЗаявления = Адрес;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗаявление(Команда)
	
	Если Не ПроверитьПодтвержденностьТелефона() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(АдресФайлаЗаявления) Тогда
		ТекстСообщения = НСтр("ru = 'Выберите файл заявления'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ФайлЗаявления");
		Возврат;
	КонецЕсли;
	
	Файл = Новый Структура("Имя,Адрес", ФайлЗаявления, АдресФайлаЗаявления);
	Результат = ОтправитьЗаявлениеНаСервере(ИдентификаторЗаявления, Файл); 
	Если Результат.Выполнено Тогда
		ЗаявлениеОтправлено = Истина;
		УправлениеФормой(ЭтаФорма);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ОписаниеОшибки); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.НовыйТелефон.ТолькоПросмотр = Форма.ВыполняетсяПроверкаТелефона;
	Элементы.ПроверитьНомер.Видимость = Не Форма.ВыполняетсяПроверкаТелефона И Не Форма.ТелефонПодтвержден;
	Элементы.ЗаголовокКодПодтверждения.Видимость = Форма.ВыполняетсяПроверкаТелефона И Не Форма.ТелефонПодтвержден;
	Элементы.ГруппаКодПодтверждения.Видимость = Форма.ВыполняетсяПроверкаТелефона И Не Форма.ТелефонПодтвержден;
	Элементы.НадписьОбратногоОтсчета.Видимость = Форма.КодОтправлен И Форма.ВыполняетсяПроверкаТелефона;	
	Элементы.ОтправитьКодПовторно.Видимость = Не Форма.КодОтправлен И Форма.ВыполняетсяПроверкаТелефона;
	
	Если Форма.ТелефонПодтвержден Тогда
		Элементы.НовыйТелефон.Вид = ВидПоляФормы.ПолеНадписи;
		Элементы.НовыйТелефон.Подсказка = НСтр("ru = 'Подтвержден'");
		Элементы.НовыйТелефон.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСправа;
	КонецЕсли;
	
	Если Форма.НомерКода > 1 Тогда
		Элементы.КодПодтверждения.ПодсказкаВвода = СтрШаблон(НСтр("ru = 'Введите код №%1 из SMS'"), Форма.НомерКода);
	Иначе
		Элементы.КодПодтверждения.ПодсказкаВвода = НСтр("ru = 'Введите код из SMS'");
	КонецЕсли;
	
	Форма.ФайлЗаявления = НСтр("ru = 'Выбрать'");
	
	Элементы.ГруппаИнструкция.Видимость = Не Форма.ЗаявлениеОтправлено;
	Элементы.Информация.Видимость = Форма.ЗаявлениеОтправлено;
	Элементы.Информация.Заголовок = СтрШаблон(НСтр("ru = 'Заявление принято к рассмотрению.
                                                    |По результатам рассмотрения заявление вы получите SMS на номер %1'"), Форма.НовыйТелефон);
													
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТабличныйДокументНаСервере(ИдентификаторЗаявления)
	
	Результат = МенеджерСервисаКриптографии.НапечататьЗаявление(ИдентификаторЗаявления);
	Если Не Результат.Выполнено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ОписаниеОшибки);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтправитьЗаявлениеНаСервере(ИдентификаторЗаявления, ФайлЗаявления)
	
	Результат = МенеджерСервисаКриптографии.ОтправитьЗаявление(ИдентификаторЗаявления, ФайлЗаявления);
	Если Не Результат.Выполнено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ОписаниеОшибки);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ПроверитьКодПодтверждения()
	
	КодПодтверждения = СокрЛП(КодПодтверждения);
	Если СтрДлина(КодПодтверждения) = 6 Тогда
		Если ПроверитьТелефон(ИдентификаторЗаявления, КодПодтверждения) Тогда
			ТелефонПодтвержден = Истина;
			ВыполняетсяПроверкаТелефона = Ложь;
			ОтключитьОбработчикОжидания("Подключаемый_ОбработчикОбратногоОтсчета");
			УправлениеФормой(ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьТелефон(ИдентификаторЗаявления, КодПодтверждения) 
	
	Результат = МенеджерСервисаКриптографии.ПроверитьТелефон(ИдентификаторЗаявления, КодПодтверждения);
	
	Если Не Результат.Выполнено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ОписаниеОшибки,, "КодПодтверждения");
	КонецЕсли;

	Возврат Результат.Выполнено;
	
КонецФункции

#КонецОбласти