////////////////////////////////////////////////////////////////////////////////
// Подсистема "Метрологическая служба. Единицы величин".
// ОбщийМодуль.ЕдиницыВеличинКлиентСервер.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает номер версии библиотеки.
//
// Возвращаемое значение:
//	Строка - номер версии библиотеки.
//
Функция ВерсияБиблиотеки() Экспорт
	
	Возврат "1.1.0.28";
	
КонецФункции

// Возвращает наименование единицы величины или приставки.
//
// Параметры:
// 	ЕдиницаВеличиныИлиПриставка	- Ссылка, Объект, Структура - Сссылка, объект, структура приставки,
//    единицы величины.
// 	ОбозначениеЕдиницыВеличин - ОбозначенияЕдиницВеличин	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Строка
//
Функция ПолучитьНаименование(Знач ЕдиницаВеличиныИлиПриставка, Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"ЕдиницыВеличинКлиентСервер.ПолучитьНаименование",
		"ЕдиницаВеличиныИлиПриставка",
		ЕдиницаВеличиныИлиПриставка,
		Новый ОписаниеТипов(
			"СправочникСсылка.ЕдиницыВеличин, СправочникОбъект.ЕдиницыВеличин,
			|СправочникСсылка.ПриставкиЕдиницВеличин, СправочникОбъект.ПриставкиЕдиницВеличин,
			|ДанныеФормыСтруктура, Структура"),
		ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьТипыСвойствНаименованияИОбозначения());
		
	Если ЗначениеЗаполнено(ЕдиницаВеличиныИлиПриставка) Тогда
		Возврат ЕдиницаВеличиныИлиПриставка[ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитНаименования(ОбозначениеЕдиницыВеличин)];
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

// Возвращает обозначение единицы величины или приставки.
//
// Параметры:
// 	ЕдиницаВеличиныИлиПриставка	- Ссылка, Объект, Структура - Сссылка, объект, структура приставки,
//    единицы величины.
// 	ОбозначениеЕдиницыВеличин - ОбозначенияЕдиницВеличин	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Строка
//
Функция ПолучитьОбозначение(Знач ЕдиницаВеличиныИлиПриставка, Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"ЕдиницыВеличинКлиентСервер.ПолучитьОбозначение",
		"ЕдиницаВеличиныИлиПриставка",
		ЕдиницаВеличиныИлиПриставка,
		Новый ОписаниеТипов(
			"СправочникСсылка.ЕдиницыВеличин, СправочникОбъект.ЕдиницыВеличин,
			|СправочникСсылка.ПриставкиЕдиницВеличин, СправочникОбъект.ПриставкиЕдиницВеличин,
			|ДанныеФормыСтруктура, Структура"),
		ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьТипыСвойствНаименованияИОбозначения());

	Если ЗначениеЗаполнено(ЕдиницаВеличиныИлиПриставка) Тогда
		Возврат ЕдиницаВеличиныИлиПриставка[ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитОбозначения(ОбозначениеЕдиницыВеличин)];
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

// Возвращает предлог, используемый перед единицей величины в знаменателе производной единицы.
//
// Параметры:
// 	ЕдиницаВеличины	- Ссылка, Объект, Структура - Сссылка, объект, структура единицы величины.
// 	ОбозначениеЕдиницыВеличин - ОбозначенияЕдиницВеличин	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Строка
//
Функция ПолучитьПредлогДляЗнаменателя(Знач ЕдиницаВеличины, Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"ЕдиницыВеличинКлиентСервер.ПолучитьПредлогДляЗнаменателя",
		"ЕдиницаВеличины",
		ЕдиницаВеличины,
		Новый ОписаниеТипов(
			"СправочникСсылка.ЕдиницыВеличин, СправочникОбъект.ЕдиницыВеличин,
			|ДанныеФормыСтруктура, Структура"),
		ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьТипыСвойствНаименованияИОбозначения());

	Если ЗначениеЗаполнено(ЕдиницаВеличины) Тогда
		Возврат ЕдиницаВеличины[ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитПредлогаДляЗнаменателя(ОбозначениеЕдиницыВеличин)];
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

// Возвращает признак необходимости пробела после значения и перед обозначением единицы величины.
//
// Параметры:
// 	ЕдиницаВеличины	- Ссылка, Объект, Структура - Сссылка, объект, структура единицы величины.
// 	ОбозначениеЕдиницыВеличин - ОбозначенияЕдиницВеличин	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Булево
//
Функция ПолучитьПробелПередОбозначением(Знач ЕдиницаВеличины, Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		"ЕдиницыВеличинКлиентСервер.ПолучитьПредлогДляЗнаменателя",
		"ЕдиницаВеличины",
		ЕдиницаВеличины,
		Новый ОписаниеТипов(
			"СправочникСсылка.ЕдиницыВеличин, СправочникОбъект.ЕдиницыВеличин,
			|ДанныеФормыСтруктура, Структура"),
		ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьТипыСвойствНаименованияИОбозначения());

	Если ЗначениеЗаполнено(ЕдиницаВеличины) Тогда
		Возврат ЕдиницаВеличины[ЕдиницыВеличинКлиентСерверПовтИсп.ПолучитьРеквизитПробелПередОбозначением(ОбозначениеЕдиницыВеличин)];
	Иначе
		Возврат "";
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Принудительно вычисляет зависимые реквизиты в переданном объекте Единицы Величины 
// или структуре, содержащей реквизиты единицы величины.
//
// Параметры:
//     Объект - Объект, Структура, ДанныеФормыСтруктура - объект либо структура,
//       хранящая данные объекта Единицы Величин
//     ВыполнятьДлительныеОперации - Булево - обновлять ли наименования и обозначения, подтверждение когерентности
//       единицы. Указанные операции требуют обращения к серверу
//
Процедура ОбновитьВычисляемыеРеквизиты(Объект, ВыполнятьДлительныеОперации = Истина) Экспорт
	
	Если ВыполнятьДлительныеОперации Тогда
		
		ЕдиницыВеличинВызовСервера.ОбновитьВычисляемыеРеквизиты(Объект);
		
	Иначе 
		
		Если Объект.ЭтоОсновнаяЕдиница Тогда
			Объект.ЭтоКогерентнаяЕдиница = Истина;
		КонецЕсли;
		
		Если Объект.ЭтоКогерентнаяЕдиница Тогда
			Объект.Коэффициент = "1";
		КонецЕсли;
		
		Если Не Объект.ИмеетСпециальныеНаименованиеИОбозначение Тогда
			Объект.ДопустимоПрименениеПриставок = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
