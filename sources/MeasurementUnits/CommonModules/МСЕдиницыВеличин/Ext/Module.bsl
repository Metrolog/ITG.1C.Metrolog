////////////////////////////////////////////////////////////////////////////////
// Подсистема "Метрологическая служба. Единицы величин".
// ОбщийМодуль.МСЕдиницыВеличин.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Интеграция с Библиотекой стандартных подсистем (БСП).
// Подсистема "Базовая функциональность".

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает идентификатор подсистемы в в справочнике объектов
// метаданных.
//
Функция ИдентификаторПодсистемы() Экспорт
	
	Возврат ОбщегоНазначения.ИдентификаторОбъектаМетаданных(
		"Подсистема.МетрологическаяСлужба.Подсистема.ЕдиницыВеличин");
	
КонецФункции

// Заполняет массив типов неразделенных данных, для которых поддерживается сопоставление ссылок
// при загрузке данных в другую информационную базу.
//
// Параметры:
//  Типы - Массив(ОбъектМетаданных).
//
Процедура ПриЗаполненииТиповОбщихДанныхПоддерживающихСопоставлениеСсылокПриЗагрузке(Типы) Экспорт
	
	Типы.Добавить(Метаданные.Справочники.МСЕдиницыВеличинПриставкиКратныхИДольных);
	
КонецПроцедуры

// Заполняет массив типов, исключаемых из выгрузки и загрузки данных.
//
// Параметры:
//  Типы - Массив - заполняется метаданными.
//
Процедура ПриЗаполненииТиповИсключаемыхИзВыгрузкиЗагрузки(Типы) Экспорт
	
	// TODO: Необходимо протестировать сопоставление приставок
	// Типы.Добавить(Метаданные.Справочники.МСЕдиницыВеличинПриставкиКратныхИДольных);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Подсистема "Поиск и удаление дублей".

// Определить объекты, в модулях менеджеров которых предусмотрена возможность параметризации 
//   алгоритма поиска дублей с помощью экспортных процедур ПараметрыПоискаДублей, ПриПоискеДублей 
//   и ВозможностьЗаменыЭлементов.
//
// Параметры:
//   Объекты - Соответствие - Объекты, в модулях менеджеров которых размещены экспортные процедуры.
//       ** Ключ     - Строка - Полное имя объекта метаданных, подключенного к подсистеме "Поиск и удаление дублей".
//       ** Значение - Строка - Имена экспортных процедур, определенных в модуле менеджера.
//           Могут быть перечислены:
//           "ПараметрыПоискаДублей",
//           "ПриПоискеДублей",
//           "ВозможностьЗаменыЭлементов".
//           Каждое имя должно начинаться с новой строки.
//           Если указана пустая строка, значит в модуле менеджера определены все процедуры.
//
// Примеры:
//
//  1. Определены все процедуры.
//	Объекты.Вставить(Метаданные.Документы.ЗаказПокупателя.ПолноеИмя(), "");
//
//  2. Определены процедуры ПараметрыПоискаДублей и ПриПоискеДублей.
//	Объекты.Вставить(Метаданные.БизнесПроцессы.ЗаданиеСРолевойАдресацией.ПолноеИмя(), "ПараметрыПоискаДублей
//		|ПриПоискеДублей");
//
Процедура ПриОпределенииОбъектовСПоискомДублей(Объекты) Экспорт
	
	Объекты.Вставить(Метаданные.Справочники.МСЕдиницыВеличинПриставкиКратныхИДольных.ПолноеИмя(),
		"ПараметрыПоискаДублей
		|ПриПоискеДублей"
	);
	Объекты.Вставить(Метаданные.Справочники.МСЕдиницыВеличинБазовые.ПолноеИмя(),
		"ПараметрыПоискаДублей
		|ПриПоискеДублей"
	);
	Объекты.Вставить(Метаданные.Справочники.МСЕдиницыВеличин.ПолноеИмя(),
		"ПараметрыПоискаДублей
		|ПриПоискеДублей"
	);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписьюУдалитьЛишниеПробелыВНаименованииИОбозначении(Источник, Отказ) Экспорт
	
	Перем РеквизитНаименование;
	Перем РеквизитОбозначение;
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ВариантОбозначения Из Метаданные.Перечисления.МСЕдиницыВеличинОбозначения.ЗначенияПеречисления Цикл
		РеквизитНаименование = "Наименование" + ВариантОбозначения.Имя;
		Источник[РеквизитНаименование] = СокрЛП(Источник[РеквизитНаименование]);
		РеквизитОбозначение = "Обозначение" + ВариантОбозначения.Имя;
		Источник[РеквизитОбозначение] = СокрЛП(Источник[РеквизитОбозначение]);
	КонецЦикла;
	
	Отказ = Ложь;
	
КонецПроцедуры

Процедура ПередЗаписьюЗаполнитьОтключенныеНаименованияИОбозначения(Источник, Отказ) Экспорт
	
	Перем РеквизитНаименование;
	Перем РеквизитОбозначение;
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначенияРус")
		И ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначенияРусISO_80000_1")
	Тогда
	
		Если Не ЗначениеЗаполнено(Источник.Ссылка)
			ИЛИ (
				(Источник.Ссылка.НаименованиеРус = Источник.Ссылка.НаименованиеРусISO_80000_1)
				ИЛИ (ПустаяСтрока(Источник.Ссылка.НаименованиеРус))
			)
		Тогда
			Источник.НаименованиеРус = Источник.НаименованиеРусISO_80000_1;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Источник.Ссылка)
			ИЛИ (
				(Источник.Ссылка.ОбозначениеРус = Источник.Ссылка.ОбозначениеРусISO_80000_1)
				ИЛИ (ПустаяСтрока(Источник.Ссылка.ОбозначениеРус))
			)
		Тогда
			Источник.ОбозначениеРус = Источник.ОбозначениеРусISO_80000_1;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначенияРусISO_80000_1")
		И ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначенияРус")
	Тогда
	
		Если Не ЗначениеЗаполнено(Источник.Ссылка)
			ИЛИ (
				(Источник.Ссылка.НаименованиеРус = Источник.Ссылка.НаименованиеРусISO_80000_1)
				ИЛИ (ПустаяСтрока(Источник.Ссылка.НаименованиеРусISO_80000_1))
			)
		Тогда
			Источник.НаименованиеРусISO_80000_1 = Источник.НаименованиеРус;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Источник.Ссылка)
			ИЛИ (
				(Источник.Ссылка.ОбозначениеРус = Источник.Ссылка.ОбозначениеРусISO_80000_1)
				ИЛИ (ПустаяСтрока(Источник.Ссылка.ОбозначениеРусISO_80000_1))
			)
		Тогда
			Источник.ОбозначениеРусISO_80000_1 = Источник.ОбозначениеРус;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначенияМн")
		И ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначенияМнISO_80000_1")
	Тогда
	
		Если Не ЗначениеЗаполнено(Источник.Ссылка)
			ИЛИ (
				(Источник.Ссылка.НаименованиеМн = Источник.Ссылка.НаименованиеМнISO_80000_1)
				ИЛИ (ПустаяСтрока(Источник.Ссылка.НаименованиеМн))
			)
		Тогда
			Источник.НаименованиеМн = Источник.НаименованиеМнISO_80000_1;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Источник.Ссылка)
			ИЛИ (
				(Источник.Ссылка.ОбозначениеМн = Источник.Ссылка.ОбозначениеМнISO_80000_1)
				ИЛИ (ПустаяСтрока(Источник.Ссылка.ОбозначениеМн))
			)
		Тогда
			Источник.ОбозначениеМн = Источник.ОбозначениеМнISO_80000_1;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначенияМнISO_80000_1")
		И ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначенияМн")
	Тогда
	
		Если Не ЗначениеЗаполнено(Источник.Ссылка)
			ИЛИ (
				(Источник.Ссылка.НаименованиеМн = Источник.Ссылка.НаименованиеМнISO_80000_1)
				ИЛИ (ПустаяСтрока(Источник.Ссылка.НаименованиеМнISO_80000_1))
			)
		Тогда
			Источник.НаименованиеМнISO_80000_1 = Источник.НаименованиеМн;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Источник.Ссылка)
			ИЛИ (
				(Источник.Ссылка.ОбозначениеМн = Источник.Ссылка.ОбозначениеМнISO_80000_1)
				ИЛИ (ПустаяСтрока(Источник.Ссылка.ОбозначениеМнISO_80000_1))
			)
		Тогда
			Источник.ОбозначениеМнISO_80000_1 = Источник.ОбозначениеМн;
		КонецЕсли;
		
	КонецЕсли;
	
	Отказ = Ложь;
	
КонецПроцедуры

#КонецОбласти