////////////////////////////////////////////////////////////////////////////////
// Подсистема "Метрологическая служба. Единицы величин".
// ОбщийМодуль.МСЕдиницыВеличинКлиентСерверПовтИсп.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

// Предикат, указывающий используются ли обозначения и наименования единиц величин указанного вида.
//
// Параметры:
// 	ОбозначениеЕдиницыВеличин - МСЕдиницыВеличинОбозначения	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Булево
//
Функция ИспользуютсяОбозначения(Знач ОбозначениеЕдиницыВеличин) Экспорт

	Возврат ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначения"
		+ ОбщегоНазначения.ИмяЗначенияПеречисления(ОбозначениеЕдиницыВеличин));

КонецФункции

// Возвращает наименование реквизита, содержащего наименование в зависимости от функциональных опций.
//
// Параметры:
// 	ОбозначениеЕдиницыВеличин - МСЕдиницыВеличинОбозначения	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Строка
//
Функция ПолучитьРеквизитНаименования(Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	Если ОбозначениеЕдиницыВеличин = Неопределено Тогда
		ОбозначениеЕдиницыВеличин = ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинОбозначения");
	КонецЕсли;

	Возврат "Наименование" + ОбщегоНазначения.ИмяЗначенияПеречисления(ОбозначениеЕдиницыВеличин);

КонецФункции

// Возвращает наименование реквизита, содержащего наименование в зависимости от функциональных опций.
//
// Параметры:
// 	ОбозначениеЕдиницыВеличин - МСЕдиницыВеличинОбозначения	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Строка
//
Функция ПолучитьРеквизитНаименованияПриставки(Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	Если ОбозначениеЕдиницыВеличин = Неопределено Тогда
		ОбозначениеЕдиницыВеличин = ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинОбозначения");
	КонецЕсли;

	Возврат "Наименование" 
		+ ОбщегоНазначения.ИмяЗначенияПеречисления(ОбозначениеЕдиницыВеличин)
		+ ?( ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинОбозначенияПриставок") = Перечисления.МСЕдиницыВеличинОбозначенияПриставок.ПоПостановлениюПравительстваРФ879,
			"",
			"ISO_80000_1"
		)
	;

КонецФункции

// Возвращает наименование реквизита, содержащего обозначение в зависимости от функциональных опций.
//
// Параметры:
// 	ОбозначениеЕдиницыВеличин - МСЕдиницыВеличинОбозначения	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Строка
//
Функция ПолучитьРеквизитОбозначения(Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	Если ОбозначениеЕдиницыВеличин = Неопределено Тогда
		ОбозначениеЕдиницыВеличин = ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинОбозначения");
	КонецЕсли;

	Возврат "Обозначение" + ОбщегоНазначения.ИмяЗначенияПеречисления(ОбозначениеЕдиницыВеличин);

КонецФункции

// Возвращает наименование реквизита, содержащего обозначение в зависимости от функциональных опций.
//
// Параметры:
// 	ОбозначениеЕдиницыВеличин - МСЕдиницыВеличинОбозначения	- Вариант обозначения
//	  единиц величин.
//
// Возвращаемое значение:
//   Строка - наименование реквизита
//
Функция ПолучитьРеквизитОбозначенияПриставки(Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	Если ОбозначениеЕдиницыВеличин = Неопределено Тогда
		ОбозначениеЕдиницыВеличин = ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинОбозначения");
	КонецЕсли;

	Возврат "Обозначение"
		+ ОбщегоНазначения.ИмяЗначенияПеречисления(ОбозначениеЕдиницыВеличин)
		+ ?( ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинОбозначенияПриставок") = Перечисления.МСЕдиницыВеличинОбозначенияПриставок.ПоПостановлениюПравительстваРФ879,
			"",
			"ISO_80000_1"
		)
	;

КонецФункции

// Возвращает наименование реквизита, содержащего предлог, используемый перед единицей величины
// в знаменателе производной единицы.
//
// Параметры:
// 	ОбозначениеЕдиницыВеличин - МСЕдиницыВеличинОбозначения	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Строка
//
Функция ПолучитьРеквизитПредлогаДляЗнаменателя(Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	Если ОбозначениеЕдиницыВеличин = Неопределено Тогда
		ОбозначениеЕдиницыВеличин = ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинОбозначения");
	КонецЕсли;

	Возврат "ПредлогДляЗнаменателя" + ОбщегоНазначения.ИмяЗначенияПеречисления(ОбозначениеЕдиницыВеличин);

КонецФункции

// Возвращает наименование реквизита, содержащего признак необходимости пробела после значения и перед
// обозначением единицы величины.
//
// Параметры:
// 	ОбозначениеЕдиницыВеличин - МСЕдиницыВеличинОбозначения	- Вариант обозначения единиц величин.
//
// Возвращаемое значение: Строка
//
Функция ПолучитьРеквизитПробелПередОбозначением(Знач ОбозначениеЕдиницыВеличин = Неопределено) Экспорт

	Если ОбозначениеЕдиницыВеличин = Неопределено Тогда
		ОбозначениеЕдиницыВеличин = ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинОбозначения");
	КонецЕсли;

	Возврат "ПробелПередОбозначением" + ОбщегоНазначения.ИмяЗначенияПеречисления(ОбозначениеЕдиницыВеличин);

КонецФункции

// Возвращает описание типов свойств наименований и обозначений единиц величин для последующего использования
// в ОбщегоНазначенияКлиентСервер.ПроверитьПараметр.
//
// Возвращаемое значение:
//   Структура - типы свойств наименований и обозначений
//
Функция ПолучитьТипыСвойствНаименованияИОбозначения() Экспорт

	Перем ОжидаемыеТипыСвойств;
	
	ОжидаемыеТипыСвойств = Новый Структура();
	
	Для Каждого ВариантОбозначения Из Метаданные.Перечисления.МСЕдиницыВеличинОбозначения.ЗначенияПеречисления Цикл
		Если ПолучитьФункциональнуюОпцию("МСЕдиницыВеличинИспользоватьОбозначения" + ВариантОбозначения.Имя) Тогда
			ОжидаемыеТипыСвойств.Вставить("Наименование" + ВариантОбозначения.Имя, Тип("Строка"));
			ОжидаемыеТипыСвойств.Вставить("Обозначение" + ВариантОбозначения.Имя, Тип("Строка"));
		КонецЕсли;
	КонецЦикла;

	Возврат ОжидаемыеТипыСвойств;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
