#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает сведения о внешней обработке.
Функция СведенияОВнешнейОбработке() Экспорт
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.2.2.1");
	ПараметрыРегистрации.Информация = НСтр("ru = 'Ввод документов на основании ""Демо: Оприходование товаров"". Используется для демонстрации возможностей подсистемы ""Дополнительные отчеты и обработки"".'");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиСозданиеСвязанныхОбъектов();
	ПараметрыРегистрации.Версия = "2.3.3.43";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Назначение.Добавить(Метаданные.Документы._ДемоОприходованиеТоваров.ПолноеИмя());
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'Скопировать документы ""Демо: Оприходование товаров"" (вызов серверного метода).'");
	Команда.Идентификатор = "Скопировать";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	Команда.ПоказыватьОповещение = Истина;
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'Создать документы ""Демо: Перемещение товаров"" (открытие формы)...'");
	Команда.Идентификатор = "СоздатьПеремещения";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	Команда.ПоказыватьОповещение = Ложь;
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'Создать документы ""Демо: Списание товаров"" (вызов клиентского метода).'");
	Команда.Идентификатор = "СоздатьСписание";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовКлиентскогоМетода();
	Команда.ПоказыватьОповещение = Истина;
	
	Возврат ПараметрыРегистрации;
КонецФункции

// Интерфейс для запуска логики обработки.
Процедура ВыполнитьКоманду(ИмяКоманды, ОбъектыНазначения, СозданныеОбъекты, ПараметрыВыполнения) Экспорт
	ДатаНачалаВМиллисекундах = ТекущаяУниверсальнаяДатаВМиллисекундах();
	МестоХраненияПриемник = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыВыполнения, "МестоХраненияПриемник");
	
	СозданныеОбъекты = Новый Массив;
	Для Каждого Основание Из ОбъектыНазначения Цикл
		ОбъектОснование = Основание.ПолучитьОбъект();
		Если ИмяКоманды = "Скопировать" Тогда
			НовыйОбъект = Скопировать(Основание, ОбъектОснование);
		ИначеЕсли ИмяКоманды = "СоздатьПеремещения" Тогда
			НовыйОбъект = СоздатьПеремещения(Основание, ОбъектОснование, МестоХраненияПриемник);
		ИначеЕсли ИмяКоманды = "СоздатьСписание" Тогда
			НовыйОбъект = СоздатьСписание(Основание, ОбъектОснование);
		Иначе
			ВызватьИсключение СтрЗаменить(НСтр("ru = 'Команда ""%1"" не поддерживается.'"), "%1", ИмяКоманды);
		КонецЕсли;
		НовыйОбъект.Записать();
		СозданныеОбъекты.Добавить(НовыйОбъект.Ссылка);
	КонецЦикла;
	
	// Имитация длительной операции.
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	ДатаЗавершенияВМиллисекундах = ДатаНачалаВМиллисекундах + 1000*ГСЧ.СлучайноеЧисло(2, 4);
	Пока ТекущаяУниверсальнаяДатаВМиллисекундах() < ДатаЗавершенияВМиллисекундах Цикл
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выполнение соответствующей команды.
Функция Скопировать(Основание, ОбъектОснование)
	НовыйОбъект = Документы._ДемоОприходованиеТоваров.СоздатьДокумент();
	ЗаполнитьДокументНаОснованииДругого(НовыйОбъект, Основание, ОбъектОснование);
	НовыйОбъект.Товары.Загрузить(ОбъектОснование.Товары.Выгрузить());
	Возврат НовыйОбъект;
КонецФункции

// Выполнение соответствующей команды.
Функция СоздатьПеремещения(Основание, ОбъектОснование, МестоХраненияПриемник)
	НовыйОбъект = Документы._ДемоПеремещениеТоваров.СоздатьДокумент();
	ЗаполнитьДокументНаОснованииДругого(НовыйОбъект, Основание, ОбъектОснование);
	НовыйОбъект.Товары.Загрузить(ОбъектОснование.Товары.Выгрузить());
	НовыйОбъект.МестоХраненияИсточник = ОбъектОснование.МестоХранения;
	НовыйОбъект.МестоХраненияПриемник = МестоХраненияПриемник;
	Возврат НовыйОбъект;
КонецФункции

// Выполнение соответствующей команды.
Функция СоздатьСписание(Основание, ОбъектОснование)
	НовыйОбъект = Документы._ДемоСписаниеТоваров.СоздатьДокумент();
	ЗаполнитьДокументНаОснованииДругого(НовыйОбъект, Основание, ОбъектОснование);
	НовыйОбъект.Товары.Загрузить(ОбъектОснование.Товары.Выгрузить());
	Возврат НовыйОбъект;
КонецФункции

// Общая механика.
Процедура ЗаполнитьДокументНаОснованииДругого(НовыйОбъект, Основание, ОбъектОснование)
	ЗаполнитьЗначенияСвойств(НовыйОбъект, ОбъектОснование, , "Номер, Ответственный");
	НовыйОбъект.Дата = ТекущаяДатаСеанса();
	НовыйОбъект.Комментарий = СтрЗаменить(НСтр("ru = 'Введен на основании ""%1"".'"), "%1", Строка(Основание))
		+ ?(ЗначениеЗаполнено(НовыйОбъект.Комментарий), " " + СокрЛП(НовыйОбъект.Комментарий), "");
КонецПроцедуры

#КонецОбласти

#КонецЕсли